@using TicketStore.Models;
@using TicketStore.Controllers;
@model IEnumerable<Stat>
@{
    ViewBag.Title = "statistics";
    if (Context.User.Claims.Any())
    {
        if (Context.User.Claims.First(c => c.Type == "Role").Value.Equals("Admin"))
        {
            Layout = "_AdminLayout";
        }
        else
        {
            Layout = "_Layout";
        }
    }
    else
    {
        Layout = "_Layout";
    }

}


<!doctype html>
<html>
<head>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/data.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
</head>
<body>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <div>

        <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>

        <br />
        <br />
        <br />
        <table id="datatable" style="display:none">
            <thead>
                <tr>
                    <th></th>
                    <th>Genre</th>

                </tr>
            </thead>

            <tbody>
                @foreach (var v in @ViewBag.data1 as ICollection<Stat>)
                {
                    <tr>
                        <th> @v.Key</th>
                        <th>@v.Values</th>
                    </tr>
}
            </tbody>
        </table>

        <script>
            Highcharts.chart('container', {
                data: {
                    table: 'datatable'
                },
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'How many tickets bought of each genre'
                },
                yAxis: {
                    allowDecimals: false,
                    title: {
                        text: 'Number of Tickets'
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.series.name + '</b><br/>' +
                            this.point.y + ' ' + this.point.name.toLowerCase();
                    }
                }

            });
        </script>

    </div>

    <section class="my-5">
        @{
            @*Gathering the Data*@


            <input id="numberOfCategory" hidden value="@Model.Count()" /> var i = 0;


            foreach (var cat in Model)
            {
                <input id="@i" hidden value="@cat.Key" />
                <input id="@cat.Key" hidden value="@cat.Values" /> i++;
            } }
    </section>

    <div class="container text-center my-3">
        <div class="my-4 col-md-12 text-center">
            <h4>The amount of money customers spent on each genre</h4>
            <h6>(D3.js)</h6>
        </div>
        <div id="my_dataviz"></div>

    </div>
    <script src="https://d3js.org/d3.v4.js"></script>
    <script src="~/js/d3Graph.js"></script>
</body>
</html>